import {
  Component,
  OnInit,
  ViewChild,
  ElementRef,
  AfterViewInit,
  Input,
} from '@angular/core';
import L from 'leaflet';
import { GeolocalizacionService } from 'src/app/services/index.service';

@Component({
  selector: 'app-geo-map',
  templateUrl: './geo-map.component.html',
  styleUrls: ['./geo-map.component.scss'],
  template: ` latitud: {{ latitud }} longitud: {{ longitud }} `,
})
export class GeoMapComponent implements OnInit, AfterViewInit {
  private map!: L.Map;

  @ViewChild('map')
  private mapContainer!: ElementRef<HTMLElement>;

  @Input()
  latitud: any;
  @Input()
  longitud: any;

  constructor(private wsdlGeo: GeolocalizacionService) {
    this.latitud = '';
    this.longitud = '';
  }

  ngOnInit() {
    console.log('lat:', this.latitud, 'long:', this.longitud);
  }

  ngAfterViewInit() {
    const myAPIKey = this.wsdlGeo.apiKey;
    //const mapStyle = 'https://maps.geoapify.com/v1/styles/osm-bright/style.json';
    const initialState = {
      lng: this.longitud,
      lat: this.latitud,
      zoom: 4,
    };

    const map = L.map(this.mapContainer.nativeElement).setView(
      [initialState.lat, initialState.lng],
      initialState.zoom
    );

    const isRetina = L.Browser.retina;
    const baseUrl =
      'https://maps.geoapify.com/v1/tile/osm-bright/{z}/{x}/{y}.png?apiKey=' +
      myAPIKey;
    const retinaUrl =
      'https://maps.geoapify.com/v1/tile/osm-bright/{z}/{x}/{y}@2x.png?apiKey=' +
      myAPIKey;

    L.tileLayer(isRetina ? retinaUrl : baseUrl, {
      attribution:
        'Powered by <a href="https://www.geoapify.com/" target="_blank">Geoapify</a> | © OpenStreetMap <a href="https://www.openstreetmap.org/copyright" target="_blank">contributors</a>',
      apiKey: myAPIKey,
      maxZoom: 20,
      id: 'osm-bright',
    } as any).addTo(map);

    //add a marker with icon generated by Geoapify Marker Icon API
    const markerIcon = L.icon({
      iconUrl: `https://api.geoapify.com/v1/icon/?type=awesome&color=red&size=large&icon=plane&apiKey=${myAPIKey}`,
      iconSize: [31, 46], // size of the icon
      iconAnchor: [15.5, 42], // point of the icon which will correspond to marker's location
      popupAnchor: [0, -45], // point from which the popup should open relative to the iconAnchor
    });

    const zooMarkerPopup = L.popup().setContent('Localización encontrada');
    const zooMarker = L.marker([initialState.lat, initialState.lng], {
      icon: markerIcon,
    })
      .bindPopup(zooMarkerPopup)
      .addTo(map);
  }
}
